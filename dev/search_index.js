var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = OkTableTools","category":"page"},{"location":"#OkTableTools","page":"Home","title":"OkTableTools","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OkTableTools.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OkTableTools]","category":"page"},{"location":"#OkTableTools.dataframes_equal-Tuple{Any, Any}","page":"Home","title":"OkTableTools.dataframes_equal","text":"dataframes_equal(df1, df2)\n\nCompare two DataFrames element by element to determine if they are equal.\n\nThis function performs a detailed comparison between two DataFrames by:\n\nChecking if they have the same number of rows\nVerifying that they have identical column names\nComparing each element in corresponding positions\n\nSpecial handling is implemented for:\n\nNaN values (considered equal to other NaNs)\nmissing values (considered equal to other missings)\n\nArguments\n\ndf1::DataFrame: First DataFrame to compare\ndf2::DataFrame: Second DataFrame to compare\n\nReturns\n\nBool: true if DataFrames are equal, false otherwise\n\nLimitations\n\nReturns false for columns containing mutable elements (e.g., vectors)\nColumn order is not considered (only content is compared)\n\nExamples\n\ndf1 = DataFrame(a = [1, 2], b = [3.0, NaN])\ndf2 = DataFrame(b = [3.0, NaN], a = [1, 2])\ndataframes_equal(df1, df2)  # returns true\n\n\n\n\n\n","category":"method"},{"location":"#OkTableTools.nearestrows-Tuple{DataFrames.AbstractDataFrame, Vararg{Pair}}","page":"Home","title":"OkTableTools.nearestrows","text":"nearestrows returns the row::DataFrameRow that best approaches the given columns and values as pairs. That is, nearestrows(df::AbstractDataFrame, prs::Pair...) returns the row of df where the norm of the distances between column vectors and reference values in pair is minimum.\n\nExample\n\n# to find the `row::DataFrameRow` where the `2`-`norm` of `row.time .- 2000` and  `row.friction .- 0.75` is minimum.\nprs = \"time\" => 2000, \"friction\" => 0.75\n\n\n\n\n\n","category":"method"},{"location":"#OkTableTools.sortbydist-Tuple{DataFrames.AbstractDataFrame, DataAPI.Cols, Any}","page":"Home","title":"OkTableTools.sortbydist","text":"sortbydist(df::AbstractDataFrame, cols::Cols, vals) sort df by the distances between scalar value and vector variable for value in vals and variable in eachcol(df[!, cols]).\n\n\n\n\n\n","category":"method"}]
}
